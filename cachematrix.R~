## Put comments here that give an overall description of what your
## functions do

## Write a short comment describing this function

makeCacheMatrix <- function(x = matrix()) {
        im <- NULL
        
        if (!exists("m")) {
              m <<- NULL
        }
        
        getmat <- function() m
        setmat <- function(vektor) m <<- vektor
        getimat <- function() im
        setimat <- function(imat) im <<- imat

        if (!is.null(v_arg)) {
                if (!identical(x,v)) {
                        printvect <- cat("the matrix curently in the cache is ", getvektor())
                        print (printmat)
                        setvektor(x)
                        printmat <- cat("the new matrix just stored into cache is ", getvektor())
                        print (printmat)
                } else {
                        printmat <- "the new matrix is identical to stored matrix"
                        print (printmat)
                }
        }

        list(setmat = setmat, getvektor = getmat, setimat = setimat, getimat = getimat)
}


## Write a short comment describing this function

cacheSolve <- function(x, ...) {
        ## Return a matrix that is the inverse of 'x'
}
